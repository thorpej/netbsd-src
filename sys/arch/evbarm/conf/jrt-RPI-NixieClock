#
#	Derived from:
#	$NetBSD: RPI,v 1.78 2017/12/10 21:38:26 skrll Exp $
#
#	This is a Raspberry Pi B+ 1.2 board intended for use
#	in a clock with a Nixie tube display.  There's a DS3231
#	to keep time until we can re-sync with an NTP server,
#	as well as a TSL2561 to sense ambient light for purposes
#	of dimming the Nixie tube display at night.
#

include	"arch/evbarm/conf/std.rpi"
include "arch/evbarm/conf/GENERIC.common"

makeoptions DTSGNUARCH="arm arm64"
makeoptions DTSSUBDIR="broadcom"

makeoptions	DTS="
	bcm2835-rpi-a.dts
	bcm2835-rpi-a-plus.dts
	bcm2835-rpi-b.dts
	bcm2835-rpi-b-plus.dts
	bcm2835-rpi-b-rev2.dts
	bcm2835-rpi-zero.dts
"

makeoptions	DTS_OVERLAYDIR="${THISARM}/conf"
makeoptions	DTS_OVERLAYS="
	jrt-RPI-NixieClock.dts
"

options 	CPU_ARM1176
options 	SOC_BCM2835
options 	TPIDRPRW_IS_CURLWP
options 	ARM11_COMPAT_MMU
options 	__HAVE_MM_MD_CACHE_ALIASING
makeoptions 	CPUFLAGS="-march=armv6z -mtune=arm1176jzf-s -mfpu=vfp"

# Architecture options

# Development and Debugging options
#options 	KGDB,KGDB_PLCOMUNIT=0,KGDB_DEVRATE=115200,KGDB_CONMODE=0xB00
makeoptions	DEBUG="-g"	# compile full symbol table
makeoptions	COPY_SYMTAB=1
options 	PLCONSOLE
#options 	PLCONSOLE,PLCOMCNUNIT=0,PLCONSPEED=115200,PLCONMODE=0xB00

## USB Debugging options
#options USB_DEBUG
#options DWC2_DEBUG
#options UHUB_DEBUG


# Valid options for BOOT_ARGS:
#  single		Boot to single user only
#  kdb			Give control to kernel debugger
#  ask			Ask for file name to reboot from
#  pmapdebug=<n>	If PMAP_DEBUG, set pmap_debug_level to <n>
#  memorydisk=<n>	Set memorydisk size to <n> KB
#  quiet		Show aprint_naive output
#  verbose		Show aprint_normal and aprint_verbose output
#options		BOOT_ARGS="\"\""

config		netbsd		root on ? type ?

# Device tree support
armfdt0		at root
simplebus*	at fdt? pass 0
#fdt*		at fdtbus?

# The CPU(s)
cpus*		at fdt? pass 0
cpu*		at cpus?

fclock*		at fdt? pass 0

# Interrupt Controller
bcmicu*		at fdt? pass 1

# System timer
bcmtmr0		at fdt? pass 1

# Clock manager
bcmcprman0 	at fdt? pass 1

# AUX
bcmaux0		at fdt? pass 2

# pulse width modulator manager
#bcmpwm0 	at fdt?

fregulator*	at fdt?

# GPIO key input
gpiokeys*	at fdt?
wskbd*		at gpiokeys? console ? mux 1

# GPIO LEDs
gpioleds*	at fdt?

# VC Mailbox
bcmmbox*	at fdt?
vcmbox* 	at bcmmbox?

# DMA Controller
bcmdmac0	at fdt?

# VCHIQ
vchiq0		at fdt?

# AUDS
vcaudio0	at vchiq0
audio*		at audiobus?

spkr*		at audio?		# PC speaker (synthesized)

# PL011 uart
plcom*		at fdt?

# AUX UART
com0		at fdt?

# Framebuffer console
genfb0		at fdt?
wsdisplay*	at genfb?
options		VCONS_DRAW_INTR
#options 	RPI_HWCURSOR

# Power management, Reset controller and Watchdog registers
bcmpmwdog*	at fdt?

# Random number generator
bcmrng0 	at fdt?

# GPIO
bcmgpio*	at fdt?

# Arasan SD/MMC Interface
sdhc*		at fdt?
sdmmc*		at sdhc?

# SD host controller
bcmsdhost* 	at fdt?
sdmmc* 		at bcmsdhost?

ld*     at sdmmc?

# On-board USB
dwctwo* 	at fdt?
usb* 		at dwctwo?

# USB device drivers
#include "dev/usb/usbdevices.config"

# USB Hubs
uhub*   at usb?
uhub*   at uhub? port ? configuration ? interface ?

# USB Mass Storage
umass*  at uhub? port ? configuration ? interface ?
scsibus* at umass?
sd*     at scsibus? target ? lun ?

# USB audio
uaudio* at uhub? port ? configuration ?
uaudio* at usbifif?
audio*  at uaudio?

# USB Ethernet adapters
usmsc*  at uhub? port ?         # SMSC95xx based adapters

# USB 802.11 adapters
urtw*   at uhub? port ?         # Realtek RTL8187/RTL8187B 802.11b/g
urtwn*  at uhub? port ?         # Realtek RTL8188CU/RTL8192CU 802.11b/g/n
#bwfm*	at uhub? port ?		# Broadcom FullMac

# USB Generic driver
ugen*   at uhub? port ?

# MII/PHY support
ukphy*		at mii? phy ?		# generic unknown PHYs

# Broadcom Serial Control (I2C)
bsciic* at fdt?
iic* at i2cbus?

# 'DS3231 Raspberry Pi RTC Board Real Time Clock Module for Arduino'
# sold by linksprite.com
dsrtc* at iic? addr 0x68 flags 3231

# Taos TSL256x ambient light sensor.
tsllux* at iic? addr 0x39

seeprom* at iic? addr ?

# MCP7940 based PiFace Real Time Clock
#dsrtc* at iic? addr 0x6f flags 7940

# SPI controller
bcmspi* at fdt?
spi* at spibus?

# MCP3x0x ADC
# flags selects the actual chip, refer to mcp3kadc(4)
#mcp3kadc0 at spi? slave 0 flags 0

# PIFace or other boards using that chip (needs gpio)
#mcp23s17gpio0 at spi? slave 0 flags 0
#mcp23s17gpio1 at spi? slave 0 flags 1
#mcp23s17gpio2 at spi? slave 0 flags 2
#mcp23s17gpio3 at spi? slave 0 flags 3

# gpio support (e. g. mcp23s17gpio, bcmgpio)
gpio*		at gpiobus?
#gpioirq0	at gpio? offset 21 mask 0x1 flag 0x1004
#gpiopps0	at gpio? offset 24 mask 0x1

# various options for wscons - we try to look as much like a standard
# sun console as possible
options 	WSEMUL_VT100		# sun terminal emulation
options 	WS_DEFAULT_FG=WSCOL_WHITE
options 	WS_DEFAULT_BG=WSCOL_BLACK
options 	WS_KERNEL_FG=WSCOL_GREEN
options 	WS_KERNEL_BG=WSCOL_BLACK
options 	WSDISPLAY_COMPAT_PCVT		# emulate some ioctls
options 	WSDISPLAY_COMPAT_SYSCONS	# emulate some more ioctls
options 	WSDISPLAY_COMPAT_USL		# wsconscfg VT handling
options 	WSDISPLAY_COMPAT_RAWKBD		# can get raw scancodes
options 	WSDISPLAY_DEFAULTSCREENS=4

#options 	FONT_QVSS8x15
#options 	FONT_GALLANT12x22	# the console font

# Pseudo-Devices

# network pseudo-devices
#pseudo-device	carp			# Common Address Redundancy Protocol
#pseudo-device	ipfilter		# IP filter (firewall) and NAT
#pseudo-device	kttcp			# network loopback
#pseudo-device	ppp			# Point-to-Point Protocol
#pseudo-device	pppoe			# PPP over Ethernet (RFC 2516)
#options 	PPPOE_SERVER		# Enable PPPoE server via link0
#pseudo-device	sl			# Serial Line IP
#pseudo-device	strip			# Starmode Radio IP (Metricom)
#pseudo-device	irframetty		# IrDA frame line discipline
#pseudo-device	tap			# virtual Ethernet
#pseudo-device	tun			# network tunneling over tty
#pseudo-device	gre			# generic L3 over IP tunnel
#pseudo-device	gif			# IPv[46] over IPv[46] tunnel (RFC 1933)
#pseudo-device	faith			# IPv[46] TCP relay translation i/f
#pseudo-device	stf			# 6to4 IPv6 over IPv4 encapsulation
#pseudo-device	vlan			# IEEE 802.1q encapsulation
#pseudo-device	bridge			# simple inter-network bridging
#options	BRIDGE_IPF		# bridge uses IP/IPv6 pfil hooks too
#pseudo-device	agr			# IEEE 802.3ad link aggregation
#pseudo-device	pf			# PF packet filter
#pseudo-device	pflog			# PF log if

# miscellaneous pseudo-devices
pseudo-device	openfirm

# wscons pseudo-devices
pseudo-device	wsmux			# mouse & keyboard multiplexor
pseudo-device	wsfont

# userland interface to drivers, including autoconf and properties retrieval

# local configuration
cinclude "arch/evbarm/conf/RPI.local"

no file-system NTFS
no file-system CD9660
no file-system NULLFS
no file-system OVERLAY
no file-system PUFFS
no pseudo-device putter
no file-system UMAPFS

no pseudo-device bridge
no pseudo-device vlan
no pseudo-device ppp
no pseudo-device pppoe
no pseudo-device tun
no pseudo-device tap
no pseudo-device gif
no pseudo-device gre
no pseudo-device npf

# Bluetooth serial UART devices
pseudo-device btuart
pseudo-device bcsp
pseudo-device bthfive
