/* $NetBSD$ */

/*-
 * Copyright (c) 2018 Jason R. Thorpe
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
 * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
 * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

#ifndef _MEDIATEK_MEDIATEK_TOPCKGENREG_H_
#define	_MEDIATEK_MEDIATEK_TOPCKGENREG_H_

#define	MT7623_TOPCKGEN_PADDR		0x10000000

/* Relative to TOPCKGEN Base address */
#define	TOPCKGEN_CLK_MODE		0x000
#define	TOPCKGEN_DCM_CFG		0x004
#define	TOPCKGEN_CLK_CFG_0		0x040
#define	TOPCKGEN_CLK_CFG_0_SET		0x044
#define	TOPCKGEN_CLK_CFG_0_CLR		0x048
#define	TOPCKGEN_CLK_CFG_1		0x050
#define	TOPCKGEN_CLK_CFG_1_SET		0x054
#define	TOPCKGEN_CLK_CFG_1_CLR		0x058
#define	TOPCKGEN_CLK_CFG_2		0x060
#define	TOPCKGEN_CLK_CFG_2_SET		0x064
#define	TOPCKGEN_CLK_CFG_2_CLR		0x068
#define	TOPCKGEN_CLK_CFG_3		0x070
#define	TOPCKGEN_CLK_CFG_3_SET		0x074
#define	TOPCKGEN_CLK_CFG_3_CLR		0x078
#define	TOPCKGEN_CLK_CFG_4		0x080
#define	TOPCKGEN_CLK_CFG_4_SET		0x084
#define	TOPCKGEN_CLK_CFG_4_CLR		0x088
#define	TOPCKGEN_CLK_CFG_5		0x090
#define	TOPCKGEN_CLK_CFG_5_SET		0x094
#define	TOPCKGEN_CLK_CFG_5_CLR		0x098
#define	TOPCKGEN_CLK_CFG_6		0x0a0
#define	TOPCKGEN_CLK_CFG_6_SET		0x0a4
#define	TOPCKGEN_CLK_CFG_6_CLR		0x0a8
#define	TOPCKGEN_CLK_CFG_7		0x0b0
#define	TOPCKGEN_CLK_CFG_7_SET		0x0b4
#define	TOPCKGEN_CLK_CFG_7_CLR		0x0b8
#define	TOPCKGEN_CLK_CFG_12		0x0c0
#define	TOPCKGEN_CLK_CFG_12_SET		0x0c4
#define	TOPCKGEN_CLK_CFG_12_CLR		0x0c8
#define	TOPCKGEN_CLK_CFG_13		0x0d0
#define	TOPCKGEN_CLK_CFG_13_SET		0x0d4
#define	TOPCKGEN_CLK_CFG_13_CLR		0x0d8
#define	TOPCKGEN_CLK_CFG_14		0x0e0
#define	TOPCKGEN_CLK_CFG_14_SET		0x0e4
#define	TOPCKGEN_CLK_CFG_14_CLR		0x0e8
#define	TOPCKGEN_CLK_CFG_15		0x0f0
#define	TOPCKGEN_CLK_CFG_15_SET		0x0f4
#define	TOPCKGEN_CLK_CFG_15_CLR		0x0f8
#define	TOPCKGEN_CLK_CFG_8		0x100
#define	TOPCKGEN_CLK_CFG_9		0x104
#define	TOPCKGEN_CLK_CFG_10		0x108
#define	TOPCKGEN_CLK_CFG_11		0x10c
#define	TOPCKGEN_CLK_AUDDIV0		0x120
#define	TOPCKGEN_CLK_AUDDIV1		0x124
#define	TOPCKGEN_CLK_AUDDIV2		0x128
#define	TOPCKGEN_CLK_AUDDIV3		0x12c
#define	TOPCKGEN_CLK_8BDAC_CFG		0x150
#defime	TOPCKGEN_CLK_SCP_CFG_0		0x200
#define	TOPCKGEN_CLK_SCP_CFG_1		0x204
#define	TOPCKGEN_CLK_MISC_CFG_0		0x210
#define	TOPCKGEN_CLK_MISC_CFG_1		0x214
#define	TOPCKGEN_CLK26CALI_0		0x220
#define	TOPCKGEN_CLK26CALI_1		0x224
#define	TOPCKGEN_CLK26CALI_2		0x228
#define	TOPCKGEN_CKSTA_REG		0x22c
#define	TOPCKGEN_TEST_MODE_CFG		0x230
#define	TOPCKGEN_MBIST_CFG_1		0x30c
#define	TOPCKGEN_RESET_DEGLITCH_KEY	0x310
#define	TOPCKGEN_MBIST_CFG_3		0x314
#define	TOPCKGEN_BOOT_TRAP		0x318

/* Clock 26M, 32K PDN Control Register */
#define	CLK_MODE_TOPCKGEN_DIS		__BIT(0)
#define	CLK_MODE_PDN_MD_32K		__BIT(8)
#define	CLK_MODE_PDN_CONN_32K		__BIT(10)

/* AXI Bus Clock DCM Control Register */
#define	DCM_CFG_DCM_FSEL_MASK		0x1f
#define	DCM_CFG_DCM_FSEL(x)		((x) & DCM_CFG_DCM_FSEL_MASK)
#define	HF_FAXI_CK_DIV32		(0)
#define	HF_FAXI_CK_DIV16		(1)
#define	HF_FAXI_CK_DIV8			(1U << 1)
#define	HF_FAXI_CK_DIV4			(1U << 2)
#define	HF_FAXI_CK_DIV2			(1U << 3)
#define	HF_FAXI_CK_DIV1			(1U << 4)
#define	DCM_CFG_DCM_ENABLE		__BIT(7)
#define	DCM_CFG_DCM_DBC_CNT_MASK	0x7f
#define	DCM_CFG_DCM_DBC_CNT(x)		(((x) & DCM_CFG_DCM_DBC_CNT_MASK) << 8)
#define	DCM_CFG_DCM_DBC_ENABLE		__BIT(15)

/* Function Clock Selection Register 0 */
#define	CLK_CFG_0_CLK_AXI_SEL_MASK	0x7
#define	CLK_CFG_0_CLK_AXI_SEL(x)	((x) & CLK_CFG_0_CLK_AXI_SEL_MASK)
#define	HF_FAXI_CK_CLK26M		0
#define	HF_FAXI_CK_SYSPLL1_D2		1
#define	HF_FAXI_CK_SYSPLL_D5		2
#define	HF_FAXI_CK_SYSPLL1_D4		3
#define	HF_FAXI_CK_UNIVPLL_D5		4
#define	HF_FAXI_CK_UNIVPLL2_D2		5
#define	HF_FAXI_CK_DMPLL_CK		6
#define	HF_FAXI_CK_DMPLL_D2		7
#define	CLK_CFG_0_CLK_AXI_INV		__BIT(4)
#define	CLK_CFG_0_PDN_AXI		__BIT(7)
#define	CLK_CFG_0_CLK_MEM_SEL		__BIT(8) /* 0=clk26m, 1=dmpll_ok */
#define	CLK_CFG_0_CLK_MEM_INV		__BIT(12)
#define	CLK_CFG_0_CLK_PDN_MEM		__BIT(15)
#define	CLK_CFG_0_CLK_DDRPHYCFG_SEL	__BIT(16)
#define	CLK_CFG_0_CLK_DDRPHYCFG_INV	__BIT(30)
#define	CLK_CFG_0_PDN_DDRPHYCFG		__BIT(23)
#define	CLK_CFG_0_CLK_MM_SEL_MASK	0x7
#define	CLK_CFG_0_CLK_MM_SEL(x)		(((x) & CLK_CFG_0_CLK_MM_SEL_MASK) << 24)
#define	HF_FMM_CK_CLK26M		0
#define	HF_FMM_CK_CENCPLL_CK		1
#define	HF_FMM_CK_SYSPLL1_D2		2
#define	HF_FMM_CK_SYSPLL_D5		3
#define	HF_FMM_CK_SYSPLL1_D4		4
#define	HF_FMM_CK_UNIVPLL_D5		5
#define	HF_FMM_CK_UNIVPLL2_D2		6
#define	HF_FMM_CK_DMPLL_CK		7
#define	CLK_CFG_0_CLK_MM_INV		__BIT(28)
#define	CLK_CFG_0_PDN_MM		__BIT(31)





#endif /* _MEDIATEK_MEDIATEK_TOPCKGENREG_H_ */
